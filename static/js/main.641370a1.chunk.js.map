{"version":3,"sources":["logo.svg","Profile.js","Calculator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Profile","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","nama","src","Component","Calculator","_this","state","name","color","angka1","angka2","operation","menu","setState","img","className","type","placeholder","value","onChange","changeHandler","bind","hitung","event","defineProperty","target","parseInt","App","src_Calculator","src_Profile","width","_this2","id","items","map","index","style","concat","onClick","clicked","key","info","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6KCiBzBC,2BAdd,SAAAA,EAAYC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACbH,0EAIJ,OACAO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAIN,KAAKH,MAAMU,MACjBH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,sBATSC,qBCyDPC,cAxDd,SAAAA,EAAYb,GAAO,IAAAc,EAAA,OAAAb,OAAAC,EAAA,EAAAD,CAAAE,KAAAU,IACZC,EAAAb,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAY,GAAAP,KAAAH,KAAMH,KAEDe,MAAQ,CACTC,KAAM,aACNC,MAAO,OACPC,OAAQ,EACRC,OAAQ,EACRC,UAAW,QARHN,uEAWRO,GAIRlB,KAAKmB,SAAS,CACZN,KAAMK,EAAKL,KACXC,MAAOI,EAAKJ,MACZM,IAAKF,EAAKE,uCAKZ,OACQhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMe,UAAW,YAAYrB,KAAKY,MAAME,OAAQd,KAAKY,MAAMC,MACpDT,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACZF,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,SAAST,KAAK,SAASU,YAAY,UAAUC,MAAOxB,KAAKY,MAAMG,OAAQU,SAAUzB,KAAK0B,cAAcC,KAAK3B,QACrHI,EAAAC,EAAAC,cAAA,UAAQO,KAAK,YAAYY,SAAUzB,KAAK0B,cAAcC,KAAK3B,OACzDI,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,KACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,SAAd,KACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,OAAd,KACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,OAAd,MAEFpB,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,SAAST,KAAK,SAASU,YAAY,UAAUC,MAAOxB,KAAKY,MAAMI,OAAQS,SAAUzB,KAAK0B,cAAcC,KAAK3B,QAVvH,KAWEI,EAAAC,EAAAC,cAAA,gBAAQN,KAAK4B,SAAb,KAA8BxB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,kDAKjCuB,GACZ7B,KAAKmB,SAALrB,OAAAgC,EAAA,EAAAhC,CAAA,GACG+B,EAAME,OAAOlB,KAAOgB,EAAME,OAAOP,yCAKpC,OAAOxB,KAAKY,MAAMK,WAChB,IAAK,OAAQ,OAAOe,SAAShC,KAAKY,MAAMG,QAAUiB,SAAShC,KAAKY,MAAMI,QACtE,IAAK,QAAS,OAAOgB,SAAShC,KAAKY,MAAMG,QAAUiB,SAAShC,KAAKY,MAAMI,QACvE,IAAK,MAAO,OAAOgB,SAAShC,KAAKY,MAAMG,QAAUiB,SAAShC,KAAKY,MAAMI,QACrE,IAAK,MAAO,OAAOgB,SAAShC,KAAKY,MAAMG,QAAUiB,SAAShC,KAAKY,MAAMI,gBApDlDP,aCoGVwB,cA/Fd,SAAAA,EAAYpC,GAAO,IAAAc,EAAA,OAAAb,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,IAClBtB,EAAAb,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmC,GAAA9B,KAAAH,KAAMH,KAEDe,MAAQ,CAETC,KAAM,OACNC,MAAO,QACPM,IAAK,YAPST,uEAWXO,GAILlB,KAAKmB,SAAS,CACZN,KAAMK,EAAKL,KACXC,MAAOI,EAAKJ,MACZM,IAAKF,EAAKE,mCAITP,GACH,MAAW,cAARA,EAEMT,EAAAC,EAAAC,cAAC4B,EAAD,MAEK,WAANrB,EAECT,EAAAC,EAAAC,cAAC6B,EAAD,CAAS5B,KAAK,QAKrBH,EAAAC,EAAAC,cAAA,yBACaF,EAAAC,EAAAC,cAAA,QAAMe,UAAW,YAAYrB,KAAKY,MAAME,OAClDd,KAAKY,MAAMC,MAAYT,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAE7BF,EAAAC,EAAAC,cAAA,OAAKE,IAAKR,KAAKY,MAAMQ,IAAKgB,MAAM,0CA0B7B,IAAAC,EAAArC,KACP,OAEFI,EAAAC,EAAAC,cAAA,OAAKgC,GAAG,OACPlC,EAAAC,EAAAC,cAAA,OAAKe,UAAU,OAAQrB,KAAKH,MAAM0C,MAAMC,IAAI,SAAEtB,EAAMuB,GAC/C,IAAIC,EAAQ,OAMhB,OAJIL,EAAKzB,MAAME,QAAUI,EAAKJ,QAC7B4B,EAAK,GAAAC,OAAMD,EAAN,eAGCtC,EAAAC,EAAAC,cAAA,KACNe,UAAWqB,EAAM,IAAIxB,EAAKJ,MAE1B8B,QAASP,EAAKQ,QAAQlB,KAAKU,EAAKnB,GAChC4B,IAAKL,GAEJvB,EAAKL,SAKRT,EAAAC,EAAAC,cAAA,OAAKe,UAAU,SACTrB,KAAK+C,KAAK/C,KAAKY,MAAMC,eAxFZJ,aCMZuC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnD,QACf6C,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KC3DjEC,IAASC,OAAOtE,EAAAC,EAAAC,cAACqE,EAAD,CAAKpC,MA/BP,CACV,CACI1B,KAAU,QACVC,MAAU,QACVM,IAAU,YAEd,CACIP,KAAU,SACVC,MAAU,SACVM,IAAU,cAEd,CACIP,KAAU,MACVC,MAAU,QACVM,IAAU,aAEd,CACIP,KAAU,OACVC,MAAU,OACVM,IAAU,WAEd,CACIP,KAAU,aACVC,MAAU,QAEd,CACID,KAAU,UACVC,MAAU,aAIqB8D,SAASC,eAAe,SDfxD,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,gBAAwB7B,OAAOC,SAAS6B,MACpDC,SAAW/B,OAAOC,SAAS8B,OAIvC,OAGF/B,OAAOgC,iBAAiB,OAAQ,WAC9B,IAAM3B,EAAK,GAAAZ,OAAMoC,gBAAN,sBAEP/B,GAgEV,SAAiCO,EAAOC,GAEtC2B,MAAM5B,GACHK,KAAK,SAAAwB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,KAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,KAAK,WAC7BV,OAAOC,SAASyC,aAKpBtC,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAyB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,KAAK,WACjCO,QAAQC,IACN,gHAMJd,EAAgBC,EAAOC,MCZ/BE","file":"static/js/main.641370a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\n\r\nclass Profile extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\t\r\n  render() {\r\n    return (\r\n    <div>\r\n      <p>{this.props.nama}</p>\r\n\t\t  <img src=\"merah.jpg\"/>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass Calculator extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            name: 'Calculator',\r\n            color: 'Pink',\r\n            angka1: 0,\r\n            angka2: 0,\r\n            operation: 'plus',\r\n        };\r\n    }\r\n    clicked(menu) {\r\n\t\t/*this.setState({\r\n\t\t\tactive: menu,\r\n    });*/\r\n    this.setState({\r\n      name: menu.name,\r\n      color: menu.color,\r\n      img: menu.img,\r\n    });\r\n  }\r\n\t\r\n  render() {\r\n    return (\r\n            <div>\r\n              <span className={\"selected \"+this.state.color}>{this.state.name}\r\n              </span><br/><br/>\r\n              <input type=\"number\" name=\"angka1\" placeholder=\"angka 1\" value={this.state.angka1} onChange={this.changeHandler.bind(this)}/>\r\n              <select name=\"operation\" onChange={this.changeHandler.bind(this)}>\r\n                <option value=\"plus\">+</option>\r\n                <option value=\"minus\">-</option>\r\n                <option value=\"pow\">x</option>\r\n                <option value=\"div\">:</option>\r\n              </select>\r\n              <input type=\"number\" name=\"angka2\" placeholder=\"angka 2\" value={this.state.angka2} onChange={this.changeHandler.bind(this)}/> =\r\n              <span> {this.hitung()} </span><br/><br/>\r\n            </div>\r\n            \r\n    );\r\n  }\r\n  changeHandler(event){\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  hitung(){\r\n    switch(this.state.operation){\r\n      case 'plus': return parseInt(this.state.angka1) + parseInt(this.state.angka2);\r\n      case 'minus': return parseInt(this.state.angka1) - parseInt(this.state.angka2);\r\n      case 'pow': return parseInt(this.state.angka1) * parseInt(this.state.angka2);\r\n      case 'div': return parseInt(this.state.angka1) / parseInt(this.state.angka2);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Calculator;","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Profile from './Profile.js';\r\nimport Calculator from './Calculator';\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.state = {\r\n      //active: 'Home',\r\n      name: 'Atta',\r\n      color: 'Merah',\r\n      img: 'atta.jpg',\r\n\t\t};\r\n\t}\r\n\t\r\n\tclicked(menu) {\r\n\t\t/*this.setState({\r\n\t\t\tactive: menu,\r\n    });*/\r\n    this.setState({\r\n      name: menu.name,\r\n      color: menu.color,\r\n      img: menu.img,\r\n    });\r\n  }\r\n  \r\n  info(name){\r\n    if(name == 'Calculator'){\r\n      //display calc\r\n      return <Calculator></Calculator>;\r\n    }\r\n    else if(name=='Profile'){\r\n      //display menu Profile\r\n      return <Profile nama=\"Say\"/>;\r\n    }\r\n    else{\r\n      //display default\r\n      return(\r\n      <div>\r\n        Ini adalah <span className={\"selected \"+this.state.color}>\r\n        {this.state.name}</span><br/><br/>\r\n\r\n        <img src={this.state.img} width=\"200\"></img>\r\n        {/* {this.menusaya()} */} \r\n      </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  /*menusaya(){\r\n    //return <img src={this.state.active+\".jpg\"} width=\"200\"></img>\r\n\r\n    var gambar;\r\n    if(this.state.active.toLowerCase() === 'merah'){\r\n      gambar = \"satu\";\r\n    }\r\n    else if(this.state.active.toLowerCase() === 'kuning'){\r\n      gambar = \"tiga\";\r\n    }\r\n    else if(this.state.active.toLowerCase() === 'hijau'){\r\n      gambar = \"empat\";\r\n    }\r\n    else if(this.state.active.toLowerCase() === 'biru'){\r\n      gambar = \"dua\";\r\n    }\r\n    return <img src={gambar+\".jpg\"} width=\"200\"></img>\r\n  }*/\r\n\t\r\n  render() {\r\n    return (\r\n\t\r\n\t\t<div id=\"app\">\r\n\t\t\t<nav className=\"nav\">{ this.props.items.map(( menu, index) => {\r\n        var style = 'menu';\r\n\t\t\t\t\r\n\t\t\t\tif (this.state.color === menu.color) {\r\n\t\t\t\t\tstyle = `${style} is-active`;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn <a\r\n\t\t\t\t\tclassName={style+\" \"+menu.color}\r\n\t\t\t\t\t\r\n\t\t\t\t\tonClick={this.clicked.bind(this,menu)}\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t>\r\n\t\t\t\t\t{menu.name}\r\n\t\t\t\t</a>;\r\n\t\t\t} ) }\r\n\t\t\t</nav>\r\n\t\t\t\r\n\t\t\t<div className=\"info \">\r\n        {this.info(this.state.name)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\t\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Custom.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst items = [\r\n    {\r\n        name    : 'Merah',\r\n        color   : 'Merah',\r\n        img     : 'atta.jpg',\r\n    },\r\n    {\r\n        name    : 'Kuning',\r\n        color   : 'Kuning',\r\n        img     : 'babang.jpg',\r\n    },\r\n    {\r\n        name    : 'Ijo',\r\n        color   : 'Hijau',\r\n        img     : 'inces.jpg',\r\n    },\r\n    {\r\n        name    : 'Biru',\r\n        color   : 'Biru',\r\n        img     : 'dua.jpg',\r\n    },\r\n    {\r\n        name    : 'Calculator',\r\n        color   : 'Pink',\r\n    },\r\n    {\r\n        name    : 'Profile',\r\n        color   : 'Orange',\r\n    },\r\n];\r\n\r\nReactDOM.render(<App items={items} />, document.getElementById('root'));\r\nserviceWorker.register();"],"sourceRoot":""}